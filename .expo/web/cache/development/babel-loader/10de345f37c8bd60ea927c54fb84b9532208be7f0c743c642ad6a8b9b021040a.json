{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SendMoney = function SendMoney(_ref) {\n  var currentBalance = _ref.currentBalance,\n    updateCurrentBalance = _ref.updateCurrentBalance;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    recipient = _useState2[0],\n    setRecipient = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    amount = _useState4[0],\n    setAmount = _useState4[1];\n  var handleSendMoney = function handleSendMoney() {\n    if (recipient.trim() === '' || amount.trim() === '') {\n      alert('Please enter a recipient and amount');\n      return;\n    }\n    var parsedAmount = parseFloat(amount);\n    if (isNaN(parsedAmount) || parsedAmount <= 0) {\n      alert('Invalid amount');\n      return;\n    }\n    if (parsedAmount > currentBalance) {\n      alert('Insufficient balance');\n      return;\n    }\n    updateCurrentBalance(parsedAmount);\n    alert(\"Successfully sent \\u20B1\" + amount + \" to \" + recipient);\n    setRecipient('');\n    setAmount('');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Send Money\"\n    }), _jsx(TextInput, {\n      placeholder: \"Recipient\",\n      value: recipient,\n      onChangeText: setRecipient,\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Amount\",\n      value: amount,\n      onChangeText: setAmount,\n      style: styles.input,\n      keyboardType: \"numeric\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSendMoney,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Send\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#f5f5f5',\n    paddingHorizontal: 30,\n    borderRadius: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    width: 250,\n    height: 50,\n    backgroundColor: '#ffffff',\n    borderRadius: 10,\n    marginBottom: 10,\n    paddingHorizontal: 10\n  },\n  button: {\n    width: 100,\n    height: 50,\n    backgroundColor: '#009688',\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#ffffff'\n  }\n});\nexport default SendMoney;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","SendMoney","_ref","currentBalance","updateCurrentBalance","_useState","_useState2","_slicedToArray","recipient","setRecipient","_useState3","_useState4","amount","setAmount","handleSendMoney","trim","alert","parsedAmount","parseFloat","isNaN","style","styles","container","children","title","placeholder","value","onChangeText","input","keyboardType","button","onPress","buttonText","create","flex","alignItems","justifyContent","backgroundColor","paddingHorizontal","borderRadius","fontSize","fontWeight","marginBottom","width","height","marginTop","color"],"sources":["C:/Users/mamit/Desktop/LoginApp/screens/SendMoney.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\n\r\nconst SendMoney = ({ currentBalance, updateCurrentBalance }) => {\r\n  const [recipient, setRecipient] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const handleSendMoney = () => {\r\n    if (recipient.trim() === '' || amount.trim() === '') {\r\n      alert('Please enter a recipient and amount');\r\n      return;\r\n    }\r\n\r\n    // Logic to send money to the recipient with the specified amount\r\n    // You can implement the actual functionality here, such as calling an API or updating a database\r\n\r\n    const parsedAmount = parseFloat(amount);\r\n    if (isNaN(parsedAmount) || parsedAmount <= 0) {\r\n      alert('Invalid amount');\r\n      return;\r\n    }\r\n\r\n    if (parsedAmount > currentBalance) {\r\n      alert('Insufficient balance');\r\n      return;\r\n    }\r\n\r\n    // Update the current balance by subtracting the sent amount\r\n    updateCurrentBalance(parsedAmount);\r\n\r\n    alert(`Successfully sent â‚±${amount} to ${recipient}`);\r\n\r\n    setRecipient('');\r\n    setAmount('');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Send Money</Text>\r\n      <TextInput\r\n        placeholder=\"Recipient\"\r\n        value={recipient}\r\n        onChangeText={setRecipient}\r\n        style={styles.input}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Amount\"\r\n        value={amount}\r\n        onChangeText={setAmount}\r\n        style={styles.input}\r\n        keyboardType=\"numeric\"\r\n      />\r\n      <TouchableOpacity style={styles.button} onPress={handleSendMoney}>\r\n        <Text style={styles.buttonText}>Send</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n    paddingHorizontal: 30,\r\n    borderRadius: 20\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: 250,\r\n    height: 50,\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  button: {\r\n    width: 100,\r\n    height: 50,\r\n    backgroundColor: '#009688',\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 20,\r\n  },\r\n  buttonText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n  },\r\n});\r\nexport default SendMoney;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}