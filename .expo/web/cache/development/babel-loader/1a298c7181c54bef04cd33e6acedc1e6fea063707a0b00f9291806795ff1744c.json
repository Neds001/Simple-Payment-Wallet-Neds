{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { defineAnimation } from \"./util\";\nimport { initialCalculations, calcuateNewMassToMatchDuration, underDampedSpringCalculations, criticallyDampedSpringCalculations, isAnimationTerminatingCalculation } from \"./springUtils\";\nexport function withSpring(toValue, userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(toValue, function () {\n    'worklet';\n\n    var defaultConfig = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 2,\n      velocity: 0,\n      duration: 2000,\n      dampingRatio: 0.5\n    };\n    var config = _objectSpread(_objectSpread(_objectSpread({}, defaultConfig), userConfig), {}, {\n      useDuration: (userConfig === null || userConfig === void 0 ? void 0 : userConfig.duration) || (userConfig === null || userConfig === void 0 ? void 0 : userConfig.dampingRatio)\n    });\n    function spring(animation, now) {\n      var toValue = animation.toValue,\n        startTimestamp = animation.startTimestamp,\n        current = animation.current;\n      var timeFromStart = now - startTimestamp;\n      if (config.useDuration && timeFromStart >= config.duration) {\n        animation.current = toValue;\n        animation.lastTimestamp = 0;\n        return true;\n      }\n      var lastTimestamp = animation.lastTimestamp,\n        velocity = animation.velocity;\n      var deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n      var t = deltaTime / 1000;\n      var v0 = -velocity;\n      var x0 = toValue - current;\n      var zeta = animation.zeta,\n        omega0 = animation.omega0,\n        omega1 = animation.omega1;\n      var _ref = zeta < 1 ? underDampedSpringCalculations(animation, {\n          zeta: zeta,\n          v0: v0,\n          x0: x0,\n          omega0: omega0,\n          omega1: omega1,\n          t: t\n        }) : criticallyDampedSpringCalculations(animation, {\n          v0: v0,\n          x0: x0,\n          omega0: omega0,\n          t: t\n        }),\n        newPosition = _ref.position,\n        newVelocity = _ref.velocity;\n      if (!config.useDuration) {\n        var _isAnimationTerminati = isAnimationTerminatingCalculation(animation, config),\n          isOvershooting = _isAnimationTerminati.isOvershooting,\n          isVelocity = _isAnimationTerminati.isVelocity,\n          isDisplacement = _isAnimationTerminati.isDisplacement;\n        animation.current = newPosition;\n        animation.velocity = newVelocity;\n        var springIsNotInMove = isOvershooting || isVelocity && isDisplacement;\n        if (springIsNotInMove) {\n          if (config.stiffness !== 0) {\n            animation.velocity = 0;\n            animation.current = toValue;\n          }\n          animation.lastTimestamp = 0;\n          return true;\n        }\n      }\n      return false;\n    }\n    function isTriggeredTwice(previousAnimation, animation) {\n      return (previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.toValue) === animation.toValue && (previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.duration) === animation.duration && (previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.dampingRatio) === animation.dampingRatio;\n    }\n    function onStart(animation, value, now, previousAnimation) {\n      animation.current = value;\n      animation.startValue = value;\n      var mass = config.mass;\n      var triggeredTwice = isTriggeredTwice(previousAnimation, animation);\n      var duration = config.duration;\n      var x0 = triggeredTwice ? previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.startValue : Number(animation.toValue) - value;\n      animation.velocity = previousAnimation ? triggeredTwice ? previousAnimation.velocity : previousAnimation.velocity + config.velocity : config.velocity;\n      if (triggeredTwice) {\n        animation.zeta = (previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.zeta) || 0;\n        animation.omega0 = (previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.omega0) || 0;\n        animation.omega1 = (previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.omega1) || 0;\n      } else {\n        if (config.useDuration) {\n          var acutalDuration = triggeredTwice ? duration - (((previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.lastTimestamp) || 0) - ((previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.startTimestamp) || 0)) : duration;\n          config.duration = acutalDuration;\n          mass = calcuateNewMassToMatchDuration(x0, config, animation.velocity);\n        }\n        var _initialCalculations = initialCalculations(mass, config),\n          zeta = _initialCalculations.zeta,\n          omega0 = _initialCalculations.omega0,\n          omega1 = _initialCalculations.omega1;\n        animation.zeta = zeta;\n        animation.omega0 = omega0;\n        animation.omega1 = omega1;\n      }\n      animation.lastTimestamp = (previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.lastTimestamp) || now;\n      animation.startTimestamp = triggeredTwice ? (previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.startTimestamp) || now : now;\n    }\n    return {\n      onFrame: spring,\n      onStart: onStart,\n      toValue: toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      startValue: 0,\n      callback: callback,\n      lastTimestamp: 0,\n      startTimestamp: 0,\n      zeta: 0,\n      omega0: 0,\n      omega1: 0\n    };\n  });\n}","map":{"version":3,"names":["defineAnimation","initialCalculations","calcuateNewMassToMatchDuration","underDampedSpringCalculations","criticallyDampedSpringCalculations","isAnimationTerminatingCalculation","withSpring","toValue","userConfig","callback","defaultConfig","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold","velocity","duration","dampingRatio","config","_objectSpread","useDuration","spring","animation","now","startTimestamp","current","timeFromStart","lastTimestamp","deltaTime","Math","min","t","v0","x0","zeta","omega0","omega1","_ref","newPosition","position","newVelocity","_isAnimationTerminati","isOvershooting","isVelocity","isDisplacement","springIsNotInMove","isTriggeredTwice","previousAnimation","onStart","value","startValue","triggeredTwice","Number","acutalDuration","_initialCalculations","onFrame"],"sources":["C:\\Users\\mamit\\Desktop\\LoginApp\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\animation\\spring.ts"],"sourcesContent":["import { defineAnimation } from './util';\nimport {\n  Animation,\n  AnimationCallback,\n  AnimatableValue,\n  Timestamp,\n} from '../commonTypes';\nimport {\n  SpringConfig,\n  initialCalculations,\n  calcuateNewMassToMatchDuration,\n  SpringAnimation,\n  InnerSpringAnimation,\n  underDampedSpringCalculations,\n  criticallyDampedSpringCalculations,\n  isAnimationTerminatingCalculation,\n} from './springUtils';\n\nexport function withSpring(\n  toValue: AnimatableValue,\n  userConfig?: SpringConfig,\n  callback?: AnimationCallback\n): Animation<SpringAnimation> {\n  'worklet';\n\n  return defineAnimation<SpringAnimation>(toValue, () => {\n    'worklet';\n    const defaultConfig: Record<keyof SpringConfig, any> = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 2,\n      velocity: 0,\n      duration: 2000,\n      dampingRatio: 0.5,\n    } as const;\n\n    const config = {\n      ...defaultConfig,\n      ...userConfig,\n      useDuration: userConfig?.duration || userConfig?.dampingRatio,\n    };\n\n    function spring(animation: InnerSpringAnimation, now: Timestamp): boolean {\n      const { toValue, startTimestamp, current } = animation;\n\n      const timeFromStart = now - startTimestamp;\n\n      if (config.useDuration && timeFromStart >= config.duration) {\n        animation.current = toValue;\n\n        // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\n        animation.lastTimestamp = 0;\n        return true;\n      }\n\n      const { lastTimestamp, velocity } = animation;\n\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n\n      const t = deltaTime / 1000;\n      const v0 = -velocity;\n      const x0 = toValue - current;\n\n      const { zeta, omega0, omega1 } = animation;\n\n      const { position: newPosition, velocity: newVelocity } =\n        zeta < 1\n          ? underDampedSpringCalculations(animation, {\n              zeta,\n              v0,\n              x0,\n              omega0,\n              omega1,\n              t,\n            })\n          : criticallyDampedSpringCalculations(animation, {\n              v0,\n              x0,\n              omega0,\n              t,\n            });\n\n      if (!config.useDuration) {\n        const { isOvershooting, isVelocity, isDisplacement } =\n          isAnimationTerminatingCalculation(animation, config);\n\n        animation.current = newPosition;\n        animation.velocity = newVelocity;\n\n        const springIsNotInMove =\n          isOvershooting || (isVelocity && isDisplacement);\n\n        if (springIsNotInMove) {\n          if (config.stiffness !== 0) {\n            animation.velocity = 0;\n            animation.current = toValue;\n          }\n          // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\n          animation.lastTimestamp = 0;\n          return true;\n        }\n      }\n      return false;\n    }\n\n    function isTriggeredTwice(\n      previousAnimation: SpringAnimation | undefined,\n      animation: SpringAnimation\n    ) {\n      return (\n        previousAnimation?.toValue === animation.toValue &&\n        previousAnimation?.duration === animation.duration &&\n        previousAnimation?.dampingRatio === animation.dampingRatio\n      );\n    }\n\n    function onStart(\n      animation: SpringAnimation,\n      value: number,\n      now: Timestamp,\n      previousAnimation: SpringAnimation | undefined\n    ): void {\n      animation.current = value;\n      animation.startValue = value;\n\n      let mass = config.mass;\n      const triggeredTwice = isTriggeredTwice(previousAnimation, animation);\n\n      const duration = config.duration;\n\n      const x0 = triggeredTwice\n        ? // If animation is triggered twice we want to continue the previous animation\n          // form the previous starting point\n          (previousAnimation?.startValue as number)\n        : Number(animation.toValue) - value;\n\n      animation.velocity = previousAnimation\n        ? triggeredTwice\n          ? previousAnimation.velocity\n          : previousAnimation.velocity + config.velocity\n        : config.velocity;\n\n      if (triggeredTwice) {\n        animation.zeta = previousAnimation?.zeta || 0;\n        animation.omega0 = previousAnimation?.omega0 || 0;\n        animation.omega1 = previousAnimation?.omega1 || 0;\n      } else {\n        if (config.useDuration) {\n          const acutalDuration = triggeredTwice\n            ? // If animation is triggered twice we want to continue the previous animation\n              // so we need to include the time that already elapsed\n              duration -\n              ((previousAnimation?.lastTimestamp || 0) -\n                (previousAnimation?.startTimestamp || 0))\n            : duration;\n\n          config.duration = acutalDuration;\n          mass = calcuateNewMassToMatchDuration(x0, config, animation.velocity);\n        }\n\n        const { zeta, omega0, omega1 } = initialCalculations(mass, config);\n        animation.zeta = zeta;\n        animation.omega0 = omega0;\n        animation.omega1 = omega1;\n      }\n\n      animation.lastTimestamp = previousAnimation?.lastTimestamp || now;\n\n      animation.startTimestamp = triggeredTwice\n        ? previousAnimation?.startTimestamp || now\n        : now;\n    }\n\n    return {\n      onFrame: spring,\n      onStart,\n      toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      startValue: 0,\n      callback,\n      lastTimestamp: 0,\n      startTimestamp: 0,\n      zeta: 0,\n      omega0: 0,\n      omega1: 0,\n    } as SpringAnimation;\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}