{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from \"./screens/Login\";\nimport HomeScreen from \"./screens/Home\";\nimport SignUpScreen from \"./screens/SignUp\";\nimport firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var firebaseConfig = {\n    apiKey: \"AIzaSyBmU1rkTjwN2x63MqsKxxsOsQqNgnGgSVE\",\n    authDomain: \"simple-digital-wallet.firebaseapp.com\",\n    projectId: \"simple-digital-wallet\",\n    storageBucket: \"simple-digital-wallet.appspot.com\",\n    messagingSenderId: \"385375427577\",\n    appId: \"1:385375427577:web:b976ccbe6b5c2f91967b28\"\n  };\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  } else {\n    firebase.app();\n  }\n  firebase.auth().onAuthStateChanged(function (user) {\n    if (user != null) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  });\n  return _jsx(NavigationContainer, {\n    children: isLoggedIn ? _jsx(Stack.Navigator, {\n      children: _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      })\n    }) : _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Sign Up\",\n        component: SignUpScreen,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nexport default App;","map":{"version":3,"names":["React","useState","View","Text","NavigationContainer","createNativeStackNavigator","LoginScreen","HomeScreen","SignUpScreen","firebase","jsx","_jsx","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","app","auth","onAuthStateChanged","user","children","Navigator","Screen","name","component","Home","options","headerShown"],"sources":["C:/Users/mamit/Desktop/LoginApp/App.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport LoginScreen from \"./screens/Login\"\r\nimport HomeScreen from \"./screens/Home\"\r\n//import DrawerNav from './screens/DrawerNav';\r\nimport SignUpScreen from \"./screens/SignUp\"\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction App() {\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyBmU1rkTjwN2x63MqsKxxsOsQqNgnGgSVE\",\r\n    authDomain: \"simple-digital-wallet.firebaseapp.com\",\r\n    projectId: \"simple-digital-wallet\",\r\n    storageBucket: \"simple-digital-wallet.appspot.com\",\r\n    messagingSenderId: \"385375427577\",\r\n    appId: \"1:385375427577:web:b976ccbe6b5c2f91967b28\"\r\n  };\r\n\r\n  //Checking if firebase has been initialized\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n  } else {\r\n    firebase.app();\r\n  }\r\n\r\n  firebase.auth().onAuthStateChanged((user) => {\r\n    if (user != null) {\r\n      setIsLoggedIn(true)\r\n    } else {\r\n      setIsLoggedIn(false);\r\n    }\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      {isLoggedIn ? <Stack.Navigator>\r\n        <Stack.Screen name=\"Home\" component={Home} options={{ headerShown: false }} />\r\n      </Stack.Navigator> :\r\n        <Stack.Navigator>\r\n          <Stack.Screen name=\"Login\" component={LoginScreen} options={{ headerShown: false }} />\r\n          <Stack.Screen name=\"Sign Up\" component={SignUpScreen} options={{ headerShown: false }} />\r\n        </Stack.Navigator>}\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAExC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,WAAW;AAClB,OAAOC,UAAU;AAEjB,OAAOC,YAAY;AACnB,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAO,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvB,IAAMC,KAAK,GAAGT,0BAA0B,CAAC,CAAC;AAE1C,SAASU,GAAGA,CAAA,EAAG;EAEb,IAAAC,SAAA,GAAoCf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,cAAc,GAAG;IACrBC,MAAM,EAAE,yCAAyC;IACjDC,UAAU,EAAE,uCAAuC;IACnDC,SAAS,EAAE,uBAAuB;IAClCC,aAAa,EAAE,mCAAmC;IAClDC,iBAAiB,EAAE,cAAc;IACjCC,KAAK,EAAE;EACT,CAAC;EAGD,IAAI,CAAClB,QAAQ,CAACmB,IAAI,CAACC,MAAM,EAAE;IACzBpB,QAAQ,CAACqB,aAAa,CAACT,cAAc,CAAC;EACxC,CAAC,MAAM;IACLZ,QAAQ,CAACsB,GAAG,CAAC,CAAC;EAChB;EAEAtB,QAAQ,CAACuB,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,UAACC,IAAI,EAAK;IAC3C,IAAIA,IAAI,IAAI,IAAI,EAAE;MAChBd,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLA,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC,CAAC;EAIF,OACET,IAAA,CAACP,mBAAmB;IAAA+B,QAAA,EACjBhB,UAAU,GAAGR,IAAA,CAACG,KAAK,CAACsB,SAAS;MAAAD,QAAA,EAC5BxB,IAAA,CAACG,KAAK,CAACuB,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEC,IAAK;QAACC,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CAAE;IAAC,CAC/D,CAAC,GAChB7B,KAAA,CAACC,KAAK,CAACsB,SAAS;MAAAD,QAAA,GACdxB,IAAA,CAACG,KAAK,CAACuB,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEjC,WAAY;QAACmC,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CAAE,CAAC,EACtF/B,IAAA,CAACG,KAAK,CAACuB,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAE/B,YAAa;QAACiC,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CAAE,CAAC;IAAA,CAC1E;EAAC,CACD,CAAC;AAE1B;AAEA,eAAe3B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}